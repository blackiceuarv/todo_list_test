# Generated by Django 4.1.7 on 2023-06-30 23:54

import authentication.services.validation_avatars
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='UnregisteredUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('email', models.EmailField(blank=True, help_text='Email користувача', max_length=254, null=True)),
                ('phone', models.CharField(blank=True, help_text='Номер телефону користувача', max_length=20, null=True)),
                ('first_name', models.CharField(blank=True, help_text="Ім'я користувача", max_length=150, null=True)),
                ('last_name', models.CharField(blank=True, help_text='Прізвище користувача', max_length=150, null=True)),
            ],
            options={
                'verbose_name_plural': 'Без реєстрації',
            },
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('last_name', models.CharField(blank=True, help_text='Прізвище користувача', max_length=24)),
                ('first_name', models.CharField(blank=True, help_text="Ім'я користувача", max_length=24)),
                ('telegram_nick_name', models.CharField(blank=True, help_text='Нікнейм у Telegram', max_length=24)),
                ('instagram_nick_name', models.CharField(blank=True, help_text='Нікнейм у Instagram', max_length=24)),
                ('email', models.EmailField(help_text='Email користувача', max_length=254, unique=True)),
                ('phone', models.CharField(blank=True, help_text='Номер телефону користувача', max_length=20, null=True)),
                ('avatar', models.ImageField(blank=True, help_text='Аватар користувача (розмір до 20 МБ, формат JPEG або PNG)', null=True, upload_to=authentication.services.validation_avatars.upload_user_avatar, validators=[authentication.services.validation_avatars.validate_image_size, authentication.services.validation_avatars.validate_image_format])),
                ('is_active', models.BooleanField(default=True)),
                ('is_staff', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name_plural': 'Користувачі',
            },
        ),
    ]
